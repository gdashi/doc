<% include ../header %>
<h1>dialog</h1>

<pre><code>FilePath: /v3/web/frame/widgets/dialog.js</code></pre>

<p>   dialog是一个显示对话框，对各种对话框进行了封装，包括提示信息对话框、错误对话框、等待对话框、加载对话框等。</p>

<h2>信息提示框</h2>

<p>   在页面中适当的位置显示一个提示信息, 并且在2秒钟后自动消失. 一般用于下发成功后显示成功的提示信息，也可以显示下发失败的的提示信息。</p>

<h3>使用方法实例（默认是成功的提示信息）：</h3>

<h4>Frame.Msg.info(&quot;提示信息&quot;);</h4>

<h4>Frame.Msg.info(sMsg,sType);</h4>

<ul><li><code>sMsg</code> : string, 提示信息字符串(通常我们用getRctext函数传入需要提示的信息)。</li><li><p><code>sType</code> : String, 提示框的类型. 可以是&quot;ok&quot;, &quot;info&quot;, &quot;error&quot;. default is &quot;ok&quot;</p><p>提示错误信息使用实例：</p><p>Frame.Msg.info(&quot;错误&quot;,&#39;error&#39;);</p></li></ul>

<h2>等待对话框</h2>

<p>  在页面中显示一个等待对话框等待页面执行某一任务, 在任务完成后由页面主动发送&quot;close&quot;事件关闭该对话框. 对话框中没有关闭图标,没有确定和取消等按钮,</p>

<h3>使用方法实例:</h3>

<h4>Frame.Msg.wait(&quot;等待信息&quot;);</h4>

<h4>Frame.Msg.wait(para);</h4>

<ul><li><p><code>para</code> - string, 等待信息字符串。(通常我们用getRctext函数传入需要的信息)</p><p>当任务完成后页面必须向该ID发送close事件以关闭对话框.</p><p>实例：var hwait = Frame.Msg.wait(&quot;等待信息&quot;); hwait.close();</p></li></ul>

<h2>警告对话框（alert）</h2>

<p>  显示提示信息对话框, 是window.alert的一种扩展. 以弹出对话框的形式显示一个提示信息. 该接口不阻塞代码, 因此点击确定后才能执行的代码需要封装到一个函数中, 做为cb参数传入.</p>

<h4>Frame.Msg.alert(sMsg, cb);</h4>

<ul><li><code>sMsg</code> - string, 提示信息字符串。(通常我们用getRctext函数传入需要的信息)</li><li><code>cb</code> - function, 点击确定后的回调函数, 可以没有。</li></ul>

<h3>使用实例：（无回调函数）</h3>

<h4>Frame.Msg.alert(&quot;警告信息&quot;);</h4>

<h2>错误提示对话框（error）</h2>

<p>  错误提示信息对话框, 是window.alert的一种扩展. 以弹出对话框的形式显示一个提示信息. 该接口不阻塞代码, 因此点击确定后才能执行的代码需要封装到一个函数中, 做为cb参数传入.</p>

<h4>Frame.Msg.error(sMsg, cb);</h4>

<ul><li><code>sMsg</code> - string, 错误信息字符串。(通常我们用getRctext函数传入需要的信息)</li><li><code>cb</code> - function, 点击确定后的回调函数, 可以没有。</li></ul>

<h3>使用实例：（无回调函数）</h3>

<h4>Frame.Msg.error(&quot;错误信息&quot;);</h4>

<h2>多个错误提示对话框（merror）</h2>

<p>  显示多个错误的提示对话框. 当配置项超过一个, 且设置了&lt;a href=&quot;srequest.js.html#Frame.SRequest.SRequestRoot.errorContinue&quot;&gt;errorContinue&lt;/a&gt;选项后,如果出现了多个错误, 则会使用该接口显示错误信息. 当错误信息较多时, 会出现垂直滚动条.</p>

<h4>Frame.Msg.merror(sMsg, cb);</h4>

<ul><li><code>sMsg</code> -string, 错误信息字符串。可以是纯文本字符串, 也可以是HTML字符串. 使用HTML字符串时需要保证HTML的有效性和正确性.</li><li><code>cb</code> -function, 点击确定后的回调函数, 可以没有。</li></ul>

<h3>使用实例：</h3>

<h4>var a =[1,2]; Frame.Msg.merror(a);</h4>

<pre><code>sMsg = &#39;&lt;div class=&quot;row&quot;&gt;&#39; + aMsg.join(&#39;&lt;/div&gt;&lt;div class=&quot;row&quot;&gt;&#39;) + &#39;&lt;/div&gt;&#39;;传入的字符串拼接起来。</code></pre>

<h2>确认信息提示框（confirm）</h2>

<p>  显示确认对话框, 替代window.confirm.</p>

<h4>Frame.Msg.confirm(sMsg, cb);</h4>

<ul><li><code>sMsg</code> - string, 提示信息字符串。</li><li><code>cb</code>- function, 点击确定后的回调函数, 可以没有。</li></ul>

<h3>使用实例：</h3>

<pre><code>Frame.Msg.confirm(&quot;提示信息&quot;);</code></pre>

<h2>页面加载对话框（pending）</h2>

<p> 加载对话框，以菊花的形式显示。</p>

<h4>Frame.Msg.pending(sMsg,SType);</h4>

<ul><li><code>sMsg</code> - string, 提示信息字符串。</li><li><code>SType</code>- 默认是pending,可以没有。</li></ul>

<h3>使用实例：</h3>

<pre><code>Frame.Msg.confirm(&quot;提示信息&quot;);
当任务完成后页面必须向该ID发送close事件以关闭对话框.

实例：var hwait = Frame.Msg.wait(&quot;等待信息&quot;); hwait.close();</code></pre>
<% include ../footer %>